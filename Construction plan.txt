//端口
香港 8292      62600  (高6)      62610  (实2) rix
新加坡 8293    62620   (B1)      62630  (B3) rix
美国 8294      62640   (481)     62650  (482) W-my
日本 8295      62660   (441)    62670  (447) C-my
台湾 8296      62680   (478)    62690  (473) C-my

//openwrt
dd if=/tmp/upload/openwrt-x86-64-combined-squashfs.img of=/dev/sda

//测速脚本
wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash

#Mac安装wtr
brew install mtr 
mtr 目录 /usr/local/Cellar/mtr/0.92/sbin
拷贝mtr mtr-packet文件到/usr/local/bin

#Linux设置代理
vi .bashrc
export http_proxy=http://tunnel.it-global.cn:62500
export https_proxy=https://tunnel.it-global.cn:62500
source .bashrc 

#自签证书
openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -subj "/C=CN/ST=Shanghai/L=Shanghai/O=Atroc/OU=Atroc/CN=Atroc/emailAddress=1074942721@qq.com" -days 36500 -out ca.crt
openssl pkcs12 -export -clcerts -in ./ca.crt -inkey ca.key -out ca.p12 -password pass:Atroc
base64 -w 0 ca.p12

#网易云自签证书
openssl genrsa -out server.key 2048
openssl req -new -sha256 -key server.key -out server.csr -subj "/C=CN/L=Hangzhou/O=NetEase (Hangzhou) Network Co., Ltd/OU=ITDept./CN=*.music.163.com"
openssl x509 -req -extfile <(printf "subjectAltName=DNS:music.163.com,DNS:*.music.163.com") -days 365 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt
\cp Atroc/server.key UnblockNeteaseMusic/server.key 
\cp Atroc/server.crt UnblockNeteaseMusic/server.crt

#搭建方案
//安装纯净系统前准备
apt-get update
//安装纯净系统
apt-get install -y xz-utils openssl gawk file
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' && chmod a+x InstallNET.sh
bash InstallNET.sh -d 9 -v 64 -a
#root密码:Vicer

//vi无法正常编辑
apt-get remove vim-common
apt-get install vim

//修改网卡名称
vi /etc/default/grub
GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"
grub-mkconfig -o /boot/grub/grub.cfg
vi /etc/network/interfaces

//安装iptables
apt-get install iptables

//安装curl
apt-get install curl

//修改hostname
vi /etc/hostname

//修改时间
date -R
tzselect
cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime

//修改SSH
vim /etc/ssh/sshd_config
*PermitRootLogin yes
*PubkeyAuthentication yes
*PasswordAuthentication yes
/etc/init.d/ssh restart

//安装httpd
yum install httpd
systemctl enable httpd.service
systemctl restart httpd.service

//apt-transport-https
apt-get install apt-transport-https

//TCP Fast Open
cat /proc/sys/net/ipv4/tcp_fastopen
nano /etc/sysctl.conf
net.ipv4.tcp_fastopen=3 //添加
sysctl -p

//MPTCP
apt-get install dirmngr
apt-key adv --keyserver hkp://keys.gnupg.net --recv-keys 379CE192D401AB61
sh -c "echo 'deb https://dl.bintray.com/cpaasch/deb stretch main' > /etc/apt/sources.list.d/mptcp.list"
apt-get update
apt-get install linux-mptcp
cd /etc/network/if-up.d/
wget https://raw.githubusercontent.com/multipath-tcp/mptcp-scripts/master/scripts/rt_table/mptcp_up
chmod +x mptcp_up
cd /etc/network/if-post-down.d/
wget https://raw.githubusercontent.com/multipath-tcp/mptcp-scripts/master/scripts/rt_table/mptcp_down
chmod +x mptcp_down
reboot
# dmesg | grep MPTCP
// 应返回 MPTCP 模块的版本号
[ 0.169869] MPTCP: Stable release v0.94.2
# sysctl net.mptcp.mptcp_enabled
// 应返回 mptcp 处于默认开启状态 1
net.mptcp.mptcp_enabled = 1

//linux ipiptunnel
创建ip tunnel
sudo modprobe ipip
ip tunnel add ipipshanyao mode ipip local 180.153.184.50 remote 103.234.128.130
开启接口并且修改mtu值
ip link set ipipshanyao up mtu 1480
配置隧道接口地址
ip addr add 172.16.201.1 peer 172.16.201.2 dev ipipshanyao
修改默认路由
ip route add 0.0.0.0/0 via 172.16.201.2

//Swap
wget https://yun.94ish.me/sh/swap.sh && bash swap.sh

//socks5
wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O socks5.sh
bash socks5.sh --port=543 --user=admin --passwd=admin
/etc/init.d/sockd status

// MTProxy
wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/mtproxy_go.sh && chmod +x mtproxy_go.sh && bash mtproxy_go.sh

//魔改BBR
wget -N --no-check-certificate "https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh" && chmod +x tcp.sh && ./tcp.sh

//anycoonect
wget -N --no-check-certificate https://raw.githubusercontent.com/Atroc-0625/Fool./master/ocserv.sh && chmod +x ocserv.sh && bash ocserv.sh

//SS
sudo sh -c 'printf "deb http://deb.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/stretch-backports.list'
sudo apt update
sudo apt -t stretch-backports install shadowsocks-libev
apt-get install simple-obfs

//SS-配置文件+启动
vi /etc/shadowsocks-libev/config.json 
/etc/init.d/shadowsocks-libev start
systemctl enable shadowsocks-libev
ss-server -c /etc/shadowsocks-libev/config.json -u --fast-open

//SS配置文件
{
    "server":["::", "0.0.0.0"],
    "mode":"tcp_and_udp",
    "server_port":443,
    "local_port":1080,
    "password":"root-443",
    "timeout":300,
    "method":"chacha20-ietf-poly1305",
    "fast_open":true,
    "nameserver":"8.8.8.8",
    "plugin":"obfs-server",
    "plugin_opts":"obfs=tls"
}

//SSR配置文件
{
    "server":"0.0.0.0",
    "server_ipv6":"[::]",
    "server_port":443,
    "local_address":"127.0.0.1",
    "local_port":1080,
	
    "password":"admin443",
    "timeout":120,
    "udp_timeout":60,
    "method":"chacha20",
    "protocol":"auth_aes128_md5",
    "protocol_param":"443",
    "obfs":"tls1.2_ticket_auth",
    "obfs_param":"itunes.apple.com/cn/app/65",
	
    "dns_ipv6":false,
    "connect_verbose_info":1,
    "redirect":["*:443#itunes.apple.com/cn/app/65:443"],
    "dns_ipv6":false,
    "fast_open":false,
    "workers":1
}
//中转配置
iptables -t nat -A PREROUTING -p tcp -m tcp --dport 443 -j DNAT --to-destination 52.175.54.186:443
iptables -t nat -A PREROUTING -p udp -m udp --dport 443 -j DNAT --to-destination 52.175.54.186:443
iptables -t nat -A POSTROUTING -d 52.175.54.186 -p tcp -m tcp --dport 443 -j SNAT --to-source 10.0.0.4
iptables -t nat -A POSTROUTING -d 52.175.54.186 -p udp -m udp --dport 443 -j SNAT --to-source 10.0.0.4
//iptables开机加载
iptables-save > /etc/iptables.up.rules
echo -e '#!/bin/bash\n/sbin/iptables-restore < /etc/iptables.up.rules' > /etc/network/if-pre-up.d/iptables
chmod +x /etc/network/if-pre-up.d/iptables
//iptables保存
iptables-save > /etc/iptables.up.rules
//查看NAT规则
iptables -t nat -vnL POSTROUTING
iptables -t nat -vnL PREROUTING
//删除NAT规则
iptables -t nat -D POSTROUTING 1
iptables -t nat -D PREROUTING 1

// Ros dd
dd前 使用fdisk -lu 注意查看下自己VPS的 磁盘路径  并不是所有VPS 都是 /dev/vda  这个路径   有些可能是   /dev/sda  /dev/xvda
执行：fdisk -ul chr.img，可以查看chr.img信息    查找 start 值 使用开始值 * 512  算出柱面位置 默认扇区大小为512  挂载时注意修改这个值
注意自己的网卡名字，有些VPS并不是eth0 需要修改脚本内的网卡名字与其对应
如果缺少 wget   使用命令：  yum install wget -y

此脚本只适应于CentOS 6.9  7.X  测试通过~


通用单网卡方案	 (适应于绝大多数VPS)
wget https://download.mikrotik.com/routeros/6.45.8/chr-6.45.8.img.zip -O chr.img.zip && \
gunzip -c chr.img.zip > chr.img && \
mount -o loop,offset=512 chr.img /mnt && \
ADDR0=`ip addr show eth0 | grep global | cut -d' ' -f 6 | head -n 1` && \
GATE0=`ip route list | grep default | cut -d' ' -f 3` && \
mkdir -p /mnt/rw && \
echo "/ip address add address=$ADDR0 interface=[/interface ethernet find where name=ether1]
/ip route add gateway=$GATE0
" > /mnt/rw/autorun.scr && \
umount /mnt && \
echo u > /proc/sysrq-trigger && \
dd if=chr.img bs=1024 of=/dev/sda && reboot






阿里云经典双网卡 (注意分清 内外 网卡)

			   缺省网关
default via 202.5.30.254 dev eth0 proto static metric 100
10.0.0.0/8 dev eth1 proto kernel scope link src 10.0.122.21 metric 101      	目标地址  <>  网关
202.5.30.0/24 dev eth0 proto kernel scope link src 202.5.30.231 metric 100  	目标地址  <>  网关

wget https://download.mikrotik.com/routeros/6.45.8/chr-6.45.8.img.zip -O chr.img.zip
gunzip -c chr.img.zip > chr.img
mount -o loop,offset=512 chr.img /mnt
ADDR0=`ip addr show eth0 | grep global | cut -d' ' -f 6 | head -n 1`			
ADDR1=`ip addr show eth1 | grep global | cut -d' ' -f 6 | head -n 1`			
GATE0=`ip route list | grep default | cut -d' ' -f 3`
GATE1=`ip route list | grep '10.0.0.0/8' | cut -d' ' -f 9`
GATE2=`ip route list | grep '202.5.30.0/24' | cut -d' ' -f 9`
mkdir -p /mnt/rw

echo "/ip address add address=$ADDR0 interface=[/interface ethernet find where name=ether1]
/ip address add address=$ADDR1 interface=[/interface ethernet find where name=ether2]
/ip route add gateway=$GATE0
/ip route add dst-address=10.0.0.0/8 gateway=$GATE1
" > /mnt/rw/autorun.scr

umount /mnt
echo u > /proc/sysrq-trigger
dd if=chr.img bs=1024 of=/dev/vda && reboot







另一款 双网卡的样本	(注意分清 内外 网卡)
196.10.68.0/24 dev eth0  proto kernel  scope link  src 196.10.68.24 
169.254.0.0/16 dev eth0  scope link  metric 1002 
169.254.0.0/16 dev eth1  scope link  metric 1003 
10.0.0.0/8 dev eth1  proto kernel  scope link  src 10.0.87.152 
default via 196.10.68.1 dev eth0


wget https://download.mikrotik.com/routeros/6.45.8/chr-6.45.8.img.zip -O chr.img.zip
gunzip -c chr.img.zip > chr.img
mount -o loop,offset=512 chr.img /mnt
ADDR0=`ip addr show eth0 | grep global | cut -d' ' -f 6 | head -n 1`			
ADDR1=`ip addr show eth1 | grep global | cut -d' ' -f 6 | head -n 1`			
GATE0=`ip route list | grep default | cut -d' ' -f 3`
GATE1=`ip route list | grep '10.0.0.0/8' | cut -d' ' -f 9`
mkdir -p /mnt/rw

echo "/ip address add address=$ADDR0 interface=[/interface ethernet find where name=ether1]
/ip address add address=$ADDR1 interface=[/interface ethernet find where name=ether2]
/ip route add gateway=$GATE0
/ip route add dst-address=10.0.0.0/8 gateway=$GATE1
" > /mnt/rw/autorun.scr

umount /mnt
echo u > /proc/sysrq-trigger
dd if=chr.img bs=1024 of=/dev/vda && reboot




常见问题：
有些D完死活启不动连不上 是因为UEFI的缘故，跟脚本无关 请改用 ROS7.0Beta 版本 支持UEFI启动
wget https://download.mikrotik.com/routeros/7.0beta5/chr-7.0beta5.img.zip -O chr.img.zip

aws Cloud DD完以后 要手动关机，再开机即可连接了


echo 1 > /proc/sys/kernel/sysrq  			向sysrq文件中写入1 开启SysRq功能
echo b > /proc/sysrq-trigger				强行立即重启系统		
